apiVersion: apps/v1
kind: Deployment
metadata:
  name: dalai
  namespace: dalai
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: dalai
      app.kubernetes.io/name: dalai
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: dalai
        app.kubernetes.io/name: dalai
    spec:
      imagePullSecrets:
        - name: docker-registry-secret
      containers:
        - name: dalai
          image: 'docker-registry.homelab.bartbrinkman.nl/dalai:latest'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          volumeMounts:
            - name: alpaca-models 
              mountPath: /root/dalai/alpaca
            - name: llama-models 
              mountPath: /root/dalai/llama
      initContainers:
        - name: models
          image: minio/mc:latest
          command: 
            - 'sh'
          args:
            - '-c'
            - |
              mc alias set minio $MINIO_HOST $MINIO_ACCESS_KEY $MINIO_SECRET_KEY &&
              mc cp --recursive minio/public/dalai/models/llama /srv/models/llama
          volumeMounts:
          - name: alpaca-models
            mountPath: /srv/models/alpaca
          - name: llama-models
            mountPath: /srv/models/llama
          env:
          - name: MINIO_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: accessKey
          - name: MINIO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: accessSecret
          - name: MINIO_HOST
            value: https://minio.homelab.bartbrinkman.nl
      volumes:
        - name: alpaca-models
          persistentVolumeClaim:
            claimName: dalai-alpaca
        - name: llama-models
          persistentVolumeClaim:
            claimName: dalai-llama