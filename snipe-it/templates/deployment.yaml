apiVersion: apps/v1
kind: Deployment
metadata:
  name: snipe-it
  namespace: snipe-it
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: snipe-it
      app.kubernetes.io/name: snipe-it
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: snipe-it
        app.kubernetes.io/name: snipe-it
    spec:
      automountServiceAccountToken: true
      containers:
        - env:
            - name: PGID
              value: '1000'
            - name: PUID
              value: '1000'
            - name: TZ
              value: UTC
            - name: MYSQL_PORT_3306_TCP_ADDR
              value: mysql
            - name: MYSQL_DATABASE
              value: snipe-it
            - name: MYSQL_USER
              value: root
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: snipe-it
                  key: mysql-root-password
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: snipe-it
                  key: app-key
            
          image: 'snipe/snipe-it:v6.0.4'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 80
            timeoutSeconds: 1
          name: snipe-it
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 80
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 80
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /var/lib/snipeit
              name: vol
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      serviceAccountName: default
      volumes:
        - name: vol
          persistentVolumeClaim:
            claimName: snipe-it